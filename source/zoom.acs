bool isZoomed;

script "WM_ToggleZoom" (void)
{
  if (IsUninitialized()) { terminate; }

  int playerN = PlayerNumber();

  WM_ToggleZoom(playerN, WM_GetSelectedWeapon());
}

function bool WM_IsWeaponBeingDeselected(int playerN)
{
  ScriptCall("WMZScriptHelper", "IsWeaponBeingDeselected");
  bool isDeselected = GetUserCVar(playerN, "m8f_wm_ResultInt");
  return isDeselected;
}

function void WM_ToggleZoomWeapon(str weaponClass, int playerN)
{
  if (WM_IsMelee(playerN)) { return; }
  if (WM_IsWeaponBeingDeselected(playerN)) { return; }

  bool isLaserConnected = GetUserCVar(playerN, "m8f_wm_LaserOnZoom");
  bool lowerWeapon      = GetUserCVar(playerN, "m8f_wm_LowerWeaponOnZoom");
  int  zoomedZoomFactor = GetUserCVar(playerN, "m8f_wm_ZoomFactor");
  int  zoomFactor;

  if (isZoomed)
  {
    zoomFactor = 1.0;
    isZoomed   = false;
    SetActorProperty(0, APROP_SPEED, 1.0);
    WM_MaybeToggleSlomoOnZoomOut(playerN);
    WM_MaybeDisableTargetSpy(playerN);
  }
  else
  {
    zoomFactor = zoomedZoomFactor;
    isZoomed   = true;
    int zoomSpeedMultiplier = GetUserCvar(playerN, "m8f_wm_ZoomSpeedMultiplier");
    SetActorProperty(0, APROP_SPEED, zoomSpeedMultiplier);
    WM_MaybeToggleSlomoOnZoomIn(playerN);
    WM_MaybeEnableTargetSpy(playerN);
  }

  bool changeZoom = (zoomedZoomFactor != 1.0);
  ScriptCall("WMZScriptHelper", "SetZoomFactor",
             zoomFactor, weaponClass, lowerWeapon, isZoomed, changeZoom);

  if (isLaserConnected)
  {
    SetUserCVar(playerN, "m8f_wm_ShowLaserSight", WM_IsZoomed());
  }
}

function void WM_ToggleZoom(int playerN, int selectedWeapon)
{
  WM_ToggleZoomWeapon(WM_GetWeaponClass(selectedWeapon), playerN);
}

function bool WM_IsZoomed(void)
{
  return isZoomed;
}

function void WM_MaybeDisableTargetSpy(int playerN)
{
  if (GetUserCVar(playerN, "m8f_wm_TargetSpyOnZoom"))
  {
    SetUserCVar(playerN, "m8f_ts_enabled", false);
  }
}

function void WM_MaybeEnableTargetSpy(int playerN)
{
  if (GetUserCVar(playerN, "m8f_wm_TargetSpyOnZoom"))
  {
    SetUserCVar(playerN, "m8f_ts_enabled", true);
  }
}
